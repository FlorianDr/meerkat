# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/
name: Continuous Deployment
on:
  push:
    branches:
      - master
  release:
    types:
      - created

jobs:
  set-env:
    name: Set Environment Variable
    runs-on: ubuntu-latest
    outputs:
      deploy_env: ${{ steps.set-env.outputs.ENVIRONMENT }}
    steps:
      - name: Determine Environment
        id: set-env
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            ENVIRONMENT=prod
          elif [ "${{ github.event_name }}" == "push" ]; then
            ENVIRONMENT=dev
          fi
          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_OUTPUT
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    needs: set-env
    concurrency: deploy-group # optional: ensure only one action runs at a time
    environment: ${{ needs.set-env.outputs.deploy_env }}
    steps:
      - uses: actions/checkout@v4
      - name: Print Environment Variable
        run: |
          echo "Deploying to environment: ${{ needs.set-env.outputs.deploy_env }}"
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: envsubst < fly.template.toml > fly.toml
        env:
          APP_NAME: ${{ secrets.APP_NAME }}
          BASE_URL: ${{ secrets.BASE_URL }}
          ZUPASS_URL: ${{ secrets.ZUPASS_URL }}
          ZUPASS_ZAPP_NAME: ${{ secrets.ZUPASS_ZAPP_NAME }}
          PRIMARY_REGION: ${{ secrets.PRIMARY_REGION }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
